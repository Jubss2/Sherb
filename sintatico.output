Grammar

    0 $accept: S $end

    1 S: MAIN BLOCO ENDMAIN

    2 BLOCO: '{' COMANDOS '}'

    3 COMANDOS: COMANDOS COMANDO
    4         | COMANDO

    5 COMANDO: DECLARACAO
    6        | ATRIB
    7        | SAIDA
    8        | ENTRADA
    9        | IF_COMANDO
   10        | WHILE_COMANDO

   11 DECLARACAO: FLOAT VAR '=' EXPR ';'
   12           | FLOAT VAR ';'
   13           | INT VAR '=' EXPR ';'
   14           | INT VAR ';'
   15           | CHAR VAR '=' CARACTERE ';'
   16           | CHAR VAR ';'

   17 EXPR: EXPR '+' EXPR
   18     | EXPR '-' EXPR
   19     | EXPR '*' EXPR
   20     | EXPR '/' EXPR
   21     | '(' EXPR ')'
   22     | VAR
   23     | REAL
   24     | INTEIRO

   25 ATRIB: VAR '=' EXPR ';'
   26      | VAR '=' CARACTERE ';'

   27 SAIDA: PRINT '(' VAR ')' ';'
   28      | PRINT '(' INTEIRO ')' ';'
   29      | PRINT '(' REAL ')' ';'
   30      | PRINT '(' CARACTERE ')' ';'

   31 ENTRADA: READ '(' VAR ')' ';'

   32 LOGICA: NOT LOGICA
   33       | LOGICA AND LOGICA
   34       | LOGICA OR LOGICA
   35       | '(' LOGICA ')'
   36       | EXPR_RELAC
   37       | VALOR

   38 VALOR: VAR
   39      | INTEIRO
   40      | REAL

   41 EXPR_RELAC: VALOR EQ VALOR
   42           | VALOR NEQ VALOR
   43           | VALOR GT VALOR
   44           | VALOR LT VALOR
   45           | VALOR GTEQ VALOR
   46           | VALOR LTEQ VALOR

   47 IF_COMANDO: IF '(' LOGICA ')' BLOCO ELSE BLOCO
   48           | IF '(' LOGICA ')' BLOCO

   49 WHILE_COMANDO: WHILE '(' LOGICA ')' BLOCO


Terminals, with rules where they appear

$end (0) 0
'(' (40) 21 27 28 29 30 31 35 47 48 49
')' (41) 21 27 28 29 30 31 35 47 48 49
'*' (42) 19
'+' (43) 17
'-' (45) 18
'/' (47) 20
';' (59) 11 12 13 14 15 16 25 26 27 28 29 30 31
'=' (61) 11 13 15 25 26
'{' (123) 2
'}' (125) 2
error (256)
MAIN (258) 1
ENDMAIN (259) 1
INT (260) 13 14
FLOAT (261) 11 12
CHAR (262) 15 16
PRINT (263) 27 28 29 30
READ (264) 31
NOT (265) 32
AND (266) 33
OR (267) 34
IF (268) 47 48
ELSE (269) 47
WHILE (270) 49
EQ (271) 41
NEQ (272) 42
GT (273) 43
LT (274) 44
GTEQ (275) 45
LTEQ (276) 46
INTEIRO (277) 24 28 39
REAL (278) 23 29 40
CARACTERE (279) 15 26 30
VAR (280) 11 12 13 14 15 16 22 25 26 27 31 38


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
S (37)
    on left: 1, on right: 0
BLOCO (38)
    on left: 2, on right: 1 47 48 49
COMANDOS (39)
    on left: 3 4, on right: 2 3
COMANDO (40)
    on left: 5 6 7 8 9 10, on right: 3 4
DECLARACAO (41)
    on left: 11 12 13 14 15 16, on right: 5
EXPR (42)
    on left: 17 18 19 20 21 22 23 24, on right: 11 13 17 18 19 20 21
    25
ATRIB (43)
    on left: 25 26, on right: 6
SAIDA (44)
    on left: 27 28 29 30, on right: 7
ENTRADA (45)
    on left: 31, on right: 8
LOGICA (46)
    on left: 32 33 34 35 36 37, on right: 32 33 34 35 47 48 49
VALOR (47)
    on left: 38 39 40, on right: 37 41 42 43 44 45 46
EXPR_RELAC (48)
    on left: 41 42 43 44 45 46, on right: 36
IF_COMANDO (49)
    on left: 47 48, on right: 9
WHILE_COMANDO (50)
    on left: 49, on right: 10


state 0

    0 $accept: . S $end

    MAIN  shift, and go to state 1

    S  go to state 2


state 1

    1 S: MAIN . BLOCO ENDMAIN

    '{'  shift, and go to state 3

    BLOCO  go to state 4


state 2

    0 $accept: S . $end

    $end  shift, and go to state 5


state 3

    2 BLOCO: '{' . COMANDOS '}'

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    CHAR   shift, and go to state 8
    PRINT  shift, and go to state 9
    READ   shift, and go to state 10
    IF     shift, and go to state 11
    WHILE  shift, and go to state 12
    VAR    shift, and go to state 13

    COMANDOS       go to state 14
    COMANDO        go to state 15
    DECLARACAO     go to state 16
    ATRIB          go to state 17
    SAIDA          go to state 18
    ENTRADA        go to state 19
    IF_COMANDO     go to state 20
    WHILE_COMANDO  go to state 21


state 4

    1 S: MAIN BLOCO . ENDMAIN

    ENDMAIN  shift, and go to state 22


state 5

    0 $accept: S $end .

    $default  accept


state 6

   13 DECLARACAO: INT . VAR '=' EXPR ';'
   14           | INT . VAR ';'

    VAR  shift, and go to state 23


state 7

   11 DECLARACAO: FLOAT . VAR '=' EXPR ';'
   12           | FLOAT . VAR ';'

    VAR  shift, and go to state 24


state 8

   15 DECLARACAO: CHAR . VAR '=' CARACTERE ';'
   16           | CHAR . VAR ';'

    VAR  shift, and go to state 25


state 9

   27 SAIDA: PRINT . '(' VAR ')' ';'
   28      | PRINT . '(' INTEIRO ')' ';'
   29      | PRINT . '(' REAL ')' ';'
   30      | PRINT . '(' CARACTERE ')' ';'

    '('  shift, and go to state 26


state 10

   31 ENTRADA: READ . '(' VAR ')' ';'

    '('  shift, and go to state 27


state 11

   47 IF_COMANDO: IF . '(' LOGICA ')' BLOCO ELSE BLOCO
   48           | IF . '(' LOGICA ')' BLOCO

    '('  shift, and go to state 28


state 12

   49 WHILE_COMANDO: WHILE . '(' LOGICA ')' BLOCO

    '('  shift, and go to state 29


state 13

   25 ATRIB: VAR . '=' EXPR ';'
   26      | VAR . '=' CARACTERE ';'

    '='  shift, and go to state 30


state 14

    2 BLOCO: '{' COMANDOS . '}'
    3 COMANDOS: COMANDOS . COMANDO

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    CHAR   shift, and go to state 8
    PRINT  shift, and go to state 9
    READ   shift, and go to state 10
    IF     shift, and go to state 11
    WHILE  shift, and go to state 12
    VAR    shift, and go to state 13
    '}'    shift, and go to state 31

    COMANDO        go to state 32
    DECLARACAO     go to state 16
    ATRIB          go to state 17
    SAIDA          go to state 18
    ENTRADA        go to state 19
    IF_COMANDO     go to state 20
    WHILE_COMANDO  go to state 21


state 15

    4 COMANDOS: COMANDO .

    $default  reduce using rule 4 (COMANDOS)


state 16

    5 COMANDO: DECLARACAO .

    $default  reduce using rule 5 (COMANDO)


state 17

    6 COMANDO: ATRIB .

    $default  reduce using rule 6 (COMANDO)


state 18

    7 COMANDO: SAIDA .

    $default  reduce using rule 7 (COMANDO)


state 19

    8 COMANDO: ENTRADA .

    $default  reduce using rule 8 (COMANDO)


state 20

    9 COMANDO: IF_COMANDO .

    $default  reduce using rule 9 (COMANDO)


state 21

   10 COMANDO: WHILE_COMANDO .

    $default  reduce using rule 10 (COMANDO)


state 22

    1 S: MAIN BLOCO ENDMAIN .

    $default  reduce using rule 1 (S)


state 23

   13 DECLARACAO: INT VAR . '=' EXPR ';'
   14           | INT VAR . ';'

    '='  shift, and go to state 33
    ';'  shift, and go to state 34


state 24

   11 DECLARACAO: FLOAT VAR . '=' EXPR ';'
   12           | FLOAT VAR . ';'

    '='  shift, and go to state 35
    ';'  shift, and go to state 36


state 25

   15 DECLARACAO: CHAR VAR . '=' CARACTERE ';'
   16           | CHAR VAR . ';'

    '='  shift, and go to state 37
    ';'  shift, and go to state 38


state 26

   27 SAIDA: PRINT '(' . VAR ')' ';'
   28      | PRINT '(' . INTEIRO ')' ';'
   29      | PRINT '(' . REAL ')' ';'
   30      | PRINT '(' . CARACTERE ')' ';'

    INTEIRO    shift, and go to state 39
    REAL       shift, and go to state 40
    CARACTERE  shift, and go to state 41
    VAR        shift, and go to state 42


state 27

   31 ENTRADA: READ '(' . VAR ')' ';'

    VAR  shift, and go to state 43


state 28

   47 IF_COMANDO: IF '(' . LOGICA ')' BLOCO ELSE BLOCO
   48           | IF '(' . LOGICA ')' BLOCO

    NOT      shift, and go to state 44
    INTEIRO  shift, and go to state 45
    REAL     shift, and go to state 46
    VAR      shift, and go to state 47
    '('      shift, and go to state 48

    LOGICA      go to state 49
    VALOR       go to state 50
    EXPR_RELAC  go to state 51


state 29

   49 WHILE_COMANDO: WHILE '(' . LOGICA ')' BLOCO

    NOT      shift, and go to state 44
    INTEIRO  shift, and go to state 45
    REAL     shift, and go to state 46
    VAR      shift, and go to state 47
    '('      shift, and go to state 48

    LOGICA      go to state 52
    VALOR       go to state 50
    EXPR_RELAC  go to state 51


state 30

   25 ATRIB: VAR '=' . EXPR ';'
   26      | VAR '=' . CARACTERE ';'

    INTEIRO    shift, and go to state 53
    REAL       shift, and go to state 54
    CARACTERE  shift, and go to state 55
    VAR        shift, and go to state 56
    '('        shift, and go to state 57

    EXPR  go to state 58


state 31

    2 BLOCO: '{' COMANDOS '}' .

    $default  reduce using rule 2 (BLOCO)


state 32

    3 COMANDOS: COMANDOS COMANDO .

    $default  reduce using rule 3 (COMANDOS)


state 33

   13 DECLARACAO: INT VAR '=' . EXPR ';'

    INTEIRO  shift, and go to state 53
    REAL     shift, and go to state 54
    VAR      shift, and go to state 56
    '('      shift, and go to state 57

    EXPR  go to state 59


state 34

   14 DECLARACAO: INT VAR ';' .

    $default  reduce using rule 14 (DECLARACAO)


state 35

   11 DECLARACAO: FLOAT VAR '=' . EXPR ';'

    INTEIRO  shift, and go to state 53
    REAL     shift, and go to state 54
    VAR      shift, and go to state 56
    '('      shift, and go to state 57

    EXPR  go to state 60


state 36

   12 DECLARACAO: FLOAT VAR ';' .

    $default  reduce using rule 12 (DECLARACAO)


state 37

   15 DECLARACAO: CHAR VAR '=' . CARACTERE ';'

    CARACTERE  shift, and go to state 61


state 38

   16 DECLARACAO: CHAR VAR ';' .

    $default  reduce using rule 16 (DECLARACAO)


state 39

   28 SAIDA: PRINT '(' INTEIRO . ')' ';'

    ')'  shift, and go to state 62


state 40

   29 SAIDA: PRINT '(' REAL . ')' ';'

    ')'  shift, and go to state 63


state 41

   30 SAIDA: PRINT '(' CARACTERE . ')' ';'

    ')'  shift, and go to state 64


state 42

   27 SAIDA: PRINT '(' VAR . ')' ';'

    ')'  shift, and go to state 65


state 43

   31 ENTRADA: READ '(' VAR . ')' ';'

    ')'  shift, and go to state 66


state 44

   32 LOGICA: NOT . LOGICA

    NOT      shift, and go to state 44
    INTEIRO  shift, and go to state 45
    REAL     shift, and go to state 46
    VAR      shift, and go to state 47
    '('      shift, and go to state 48

    LOGICA      go to state 67
    VALOR       go to state 50
    EXPR_RELAC  go to state 51


state 45

   39 VALOR: INTEIRO .

    $default  reduce using rule 39 (VALOR)


state 46

   40 VALOR: REAL .

    $default  reduce using rule 40 (VALOR)


state 47

   38 VALOR: VAR .

    $default  reduce using rule 38 (VALOR)


state 48

   35 LOGICA: '(' . LOGICA ')'

    NOT      shift, and go to state 44
    INTEIRO  shift, and go to state 45
    REAL     shift, and go to state 46
    VAR      shift, and go to state 47
    '('      shift, and go to state 48

    LOGICA      go to state 68
    VALOR       go to state 50
    EXPR_RELAC  go to state 51


state 49

   33 LOGICA: LOGICA . AND LOGICA
   34       | LOGICA . OR LOGICA
   47 IF_COMANDO: IF '(' LOGICA . ')' BLOCO ELSE BLOCO
   48           | IF '(' LOGICA . ')' BLOCO

    AND  shift, and go to state 69
    OR   shift, and go to state 70
    ')'  shift, and go to state 71


state 50

   37 LOGICA: VALOR .
   41 EXPR_RELAC: VALOR . EQ VALOR
   42           | VALOR . NEQ VALOR
   43           | VALOR . GT VALOR
   44           | VALOR . LT VALOR
   45           | VALOR . GTEQ VALOR
   46           | VALOR . LTEQ VALOR

    EQ    shift, and go to state 72
    NEQ   shift, and go to state 73
    GT    shift, and go to state 74
    LT    shift, and go to state 75
    GTEQ  shift, and go to state 76
    LTEQ  shift, and go to state 77

    $default  reduce using rule 37 (LOGICA)


state 51

   36 LOGICA: EXPR_RELAC .

    $default  reduce using rule 36 (LOGICA)


state 52

   33 LOGICA: LOGICA . AND LOGICA
   34       | LOGICA . OR LOGICA
   49 WHILE_COMANDO: WHILE '(' LOGICA . ')' BLOCO

    AND  shift, and go to state 69
    OR   shift, and go to state 70
    ')'  shift, and go to state 78


state 53

   24 EXPR: INTEIRO .

    $default  reduce using rule 24 (EXPR)


state 54

   23 EXPR: REAL .

    $default  reduce using rule 23 (EXPR)


state 55

   26 ATRIB: VAR '=' CARACTERE . ';'

    ';'  shift, and go to state 79


state 56

   22 EXPR: VAR .

    $default  reduce using rule 22 (EXPR)


state 57

   21 EXPR: '(' . EXPR ')'

    INTEIRO  shift, and go to state 53
    REAL     shift, and go to state 54
    VAR      shift, and go to state 56
    '('      shift, and go to state 57

    EXPR  go to state 80


state 58

   17 EXPR: EXPR . '+' EXPR
   18     | EXPR . '-' EXPR
   19     | EXPR . '*' EXPR
   20     | EXPR . '/' EXPR
   25 ATRIB: VAR '=' EXPR . ';'

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    ';'  shift, and go to state 85


state 59

   13 DECLARACAO: INT VAR '=' EXPR . ';'
   17 EXPR: EXPR . '+' EXPR
   18     | EXPR . '-' EXPR
   19     | EXPR . '*' EXPR
   20     | EXPR . '/' EXPR

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    ';'  shift, and go to state 86


state 60

   11 DECLARACAO: FLOAT VAR '=' EXPR . ';'
   17 EXPR: EXPR . '+' EXPR
   18     | EXPR . '-' EXPR
   19     | EXPR . '*' EXPR
   20     | EXPR . '/' EXPR

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    ';'  shift, and go to state 87


state 61

   15 DECLARACAO: CHAR VAR '=' CARACTERE . ';'

    ';'  shift, and go to state 88


state 62

   28 SAIDA: PRINT '(' INTEIRO ')' . ';'

    ';'  shift, and go to state 89


state 63

   29 SAIDA: PRINT '(' REAL ')' . ';'

    ';'  shift, and go to state 90


state 64

   30 SAIDA: PRINT '(' CARACTERE ')' . ';'

    ';'  shift, and go to state 91


state 65

   27 SAIDA: PRINT '(' VAR ')' . ';'

    ';'  shift, and go to state 92


state 66

   31 ENTRADA: READ '(' VAR ')' . ';'

    ';'  shift, and go to state 93


state 67

   32 LOGICA: NOT LOGICA .
   33       | LOGICA . AND LOGICA
   34       | LOGICA . OR LOGICA

    $default  reduce using rule 32 (LOGICA)


state 68

   33 LOGICA: LOGICA . AND LOGICA
   34       | LOGICA . OR LOGICA
   35       | '(' LOGICA . ')'

    AND  shift, and go to state 69
    OR   shift, and go to state 70
    ')'  shift, and go to state 94


state 69

   33 LOGICA: LOGICA AND . LOGICA

    NOT      shift, and go to state 44
    INTEIRO  shift, and go to state 45
    REAL     shift, and go to state 46
    VAR      shift, and go to state 47
    '('      shift, and go to state 48

    LOGICA      go to state 95
    VALOR       go to state 50
    EXPR_RELAC  go to state 51


state 70

   34 LOGICA: LOGICA OR . LOGICA

    NOT      shift, and go to state 44
    INTEIRO  shift, and go to state 45
    REAL     shift, and go to state 46
    VAR      shift, and go to state 47
    '('      shift, and go to state 48

    LOGICA      go to state 96
    VALOR       go to state 50
    EXPR_RELAC  go to state 51


state 71

   47 IF_COMANDO: IF '(' LOGICA ')' . BLOCO ELSE BLOCO
   48           | IF '(' LOGICA ')' . BLOCO

    '{'  shift, and go to state 3

    BLOCO  go to state 97


state 72

   41 EXPR_RELAC: VALOR EQ . VALOR

    INTEIRO  shift, and go to state 45
    REAL     shift, and go to state 46
    VAR      shift, and go to state 47

    VALOR  go to state 98


state 73

   42 EXPR_RELAC: VALOR NEQ . VALOR

    INTEIRO  shift, and go to state 45
    REAL     shift, and go to state 46
    VAR      shift, and go to state 47

    VALOR  go to state 99


state 74

   43 EXPR_RELAC: VALOR GT . VALOR

    INTEIRO  shift, and go to state 45
    REAL     shift, and go to state 46
    VAR      shift, and go to state 47

    VALOR  go to state 100


state 75

   44 EXPR_RELAC: VALOR LT . VALOR

    INTEIRO  shift, and go to state 45
    REAL     shift, and go to state 46
    VAR      shift, and go to state 47

    VALOR  go to state 101


state 76

   45 EXPR_RELAC: VALOR GTEQ . VALOR

    INTEIRO  shift, and go to state 45
    REAL     shift, and go to state 46
    VAR      shift, and go to state 47

    VALOR  go to state 102


state 77

   46 EXPR_RELAC: VALOR LTEQ . VALOR

    INTEIRO  shift, and go to state 45
    REAL     shift, and go to state 46
    VAR      shift, and go to state 47

    VALOR  go to state 103


state 78

   49 WHILE_COMANDO: WHILE '(' LOGICA ')' . BLOCO

    '{'  shift, and go to state 3

    BLOCO  go to state 104


state 79

   26 ATRIB: VAR '=' CARACTERE ';' .

    $default  reduce using rule 26 (ATRIB)


state 80

   17 EXPR: EXPR . '+' EXPR
   18     | EXPR . '-' EXPR
   19     | EXPR . '*' EXPR
   20     | EXPR . '/' EXPR
   21     | '(' EXPR . ')'

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    ')'  shift, and go to state 105


state 81

   17 EXPR: EXPR '+' . EXPR

    INTEIRO  shift, and go to state 53
    REAL     shift, and go to state 54
    VAR      shift, and go to state 56
    '('      shift, and go to state 57

    EXPR  go to state 106


state 82

   18 EXPR: EXPR '-' . EXPR

    INTEIRO  shift, and go to state 53
    REAL     shift, and go to state 54
    VAR      shift, and go to state 56
    '('      shift, and go to state 57

    EXPR  go to state 107


state 83

   19 EXPR: EXPR '*' . EXPR

    INTEIRO  shift, and go to state 53
    REAL     shift, and go to state 54
    VAR      shift, and go to state 56
    '('      shift, and go to state 57

    EXPR  go to state 108


state 84

   20 EXPR: EXPR '/' . EXPR

    INTEIRO  shift, and go to state 53
    REAL     shift, and go to state 54
    VAR      shift, and go to state 56
    '('      shift, and go to state 57

    EXPR  go to state 109


state 85

   25 ATRIB: VAR '=' EXPR ';' .

    $default  reduce using rule 25 (ATRIB)


state 86

   13 DECLARACAO: INT VAR '=' EXPR ';' .

    $default  reduce using rule 13 (DECLARACAO)


state 87

   11 DECLARACAO: FLOAT VAR '=' EXPR ';' .

    $default  reduce using rule 11 (DECLARACAO)


state 88

   15 DECLARACAO: CHAR VAR '=' CARACTERE ';' .

    $default  reduce using rule 15 (DECLARACAO)


state 89

   28 SAIDA: PRINT '(' INTEIRO ')' ';' .

    $default  reduce using rule 28 (SAIDA)


state 90

   29 SAIDA: PRINT '(' REAL ')' ';' .

    $default  reduce using rule 29 (SAIDA)


state 91

   30 SAIDA: PRINT '(' CARACTERE ')' ';' .

    $default  reduce using rule 30 (SAIDA)


state 92

   27 SAIDA: PRINT '(' VAR ')' ';' .

    $default  reduce using rule 27 (SAIDA)


state 93

   31 ENTRADA: READ '(' VAR ')' ';' .

    $default  reduce using rule 31 (ENTRADA)


state 94

   35 LOGICA: '(' LOGICA ')' .

    $default  reduce using rule 35 (LOGICA)


state 95

   33 LOGICA: LOGICA . AND LOGICA
   33       | LOGICA AND LOGICA .
   34       | LOGICA . OR LOGICA

    $default  reduce using rule 33 (LOGICA)


state 96

   33 LOGICA: LOGICA . AND LOGICA
   34       | LOGICA . OR LOGICA
   34       | LOGICA OR LOGICA .

    AND  shift, and go to state 69

    $default  reduce using rule 34 (LOGICA)


state 97

   47 IF_COMANDO: IF '(' LOGICA ')' BLOCO . ELSE BLOCO
   48           | IF '(' LOGICA ')' BLOCO .

    ELSE  shift, and go to state 110

    $default  reduce using rule 48 (IF_COMANDO)


state 98

   41 EXPR_RELAC: VALOR EQ VALOR .

    $default  reduce using rule 41 (EXPR_RELAC)


state 99

   42 EXPR_RELAC: VALOR NEQ VALOR .

    $default  reduce using rule 42 (EXPR_RELAC)


state 100

   43 EXPR_RELAC: VALOR GT VALOR .

    $default  reduce using rule 43 (EXPR_RELAC)


state 101

   44 EXPR_RELAC: VALOR LT VALOR .

    $default  reduce using rule 44 (EXPR_RELAC)


state 102

   45 EXPR_RELAC: VALOR GTEQ VALOR .

    $default  reduce using rule 45 (EXPR_RELAC)


state 103

   46 EXPR_RELAC: VALOR LTEQ VALOR .

    $default  reduce using rule 46 (EXPR_RELAC)


state 104

   49 WHILE_COMANDO: WHILE '(' LOGICA ')' BLOCO .

    $default  reduce using rule 49 (WHILE_COMANDO)


state 105

   21 EXPR: '(' EXPR ')' .

    $default  reduce using rule 21 (EXPR)


state 106

   17 EXPR: EXPR . '+' EXPR
   17     | EXPR '+' EXPR .
   18     | EXPR . '-' EXPR
   19     | EXPR . '*' EXPR
   20     | EXPR . '/' EXPR

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84

    $default  reduce using rule 17 (EXPR)


state 107

   17 EXPR: EXPR . '+' EXPR
   18     | EXPR . '-' EXPR
   18     | EXPR '-' EXPR .
   19     | EXPR . '*' EXPR
   20     | EXPR . '/' EXPR

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84

    $default  reduce using rule 18 (EXPR)


state 108

   17 EXPR: EXPR . '+' EXPR
   18     | EXPR . '-' EXPR
   19     | EXPR . '*' EXPR
   19     | EXPR '*' EXPR .
   20     | EXPR . '/' EXPR

    $default  reduce using rule 19 (EXPR)


state 109

   17 EXPR: EXPR . '+' EXPR
   18     | EXPR . '-' EXPR
   19     | EXPR . '*' EXPR
   20     | EXPR . '/' EXPR
   20     | EXPR '/' EXPR .

    $default  reduce using rule 20 (EXPR)


state 110

   47 IF_COMANDO: IF '(' LOGICA ')' BLOCO ELSE . BLOCO

    '{'  shift, and go to state 3

    BLOCO  go to state 111


state 111

   47 IF_COMANDO: IF '(' LOGICA ')' BLOCO ELSE BLOCO .

    $default  reduce using rule 47 (IF_COMANDO)
