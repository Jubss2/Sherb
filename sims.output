Terminals unused in grammar

   GTEQ
   LTEQ


Grammar

    0 $accept: program $end

    1 program: SULSUL BLOCO DAGDAG

    2 BLOCO: '{' COMANDOS '}'

    3 COMANDOS: COMANDOS COMANDO
    4         | COMANDO

    5 COMANDO: DECLARACAO
    6        | ATRIB
    7        | SAIDA
    8        | IF_COMANDO

    9 DECLARACAO: PABA VAR '=' EXPR ENDCOMMA
   10           | PABA VAR ENDCOMMA
   11           | FIRBS VAR '=' EXPR ENDCOMMA
   12           | FIRBS VAR ENDCOMMA
   13           | KOOJ VAR '=' CARACTERE ENDCOMMA
   14           | KOOJ VAR ENDCOMMA

   15 EXPR: EXPR '+' EXPR
   16     | EXPR '-' EXPR
   17     | EXPR '*' EXPR
   18     | EXPR '/' EXPR
   19     | '(' EXPR ')'
   20     | VAR
   21     | REAL
   22     | INTEIRO

   23 ATRIB: VAR '=' EXPR ENDCOMMA
   24      | VAR '=' CARACTERE ENDCOMMA

   25 SAIDA: JUUN '(' VAR ')' ENDCOMMA
   26      | JUUN '(' INTEIRO ')' ENDCOMMA
   27      | JUUN '(' REAL ')' ENDCOMMA
   28      | JUUN '(' CARACTERE ')' ENDCOMMA

   29 LOGICA: NOT LOGICA
   30       | LOGICA AND LOGICA
   31       | LOGICA OR LOGICA
   32       | '(' LOGICA ')'
   33       | EXPR_RELAC
   34       | VALOR

   35 VALOR: VAR
   36      | INTEIRO
   37      | REAL

   38 EXPR_RELAC: VALOR EQ VALOR
   39           | VALOR NEQ VALOR
   40           | VALOR GT VALOR
   41           | VALOR LT VALOR

   42 IF_COMANDO: LOOBLE '(' LOGICA ')' BLOCO WOOBLE BLOCO
   43           | LOOBLE '(' LOGICA ')' BLOCO


Terminals, with rules where they appear

$end (0) 0
'(' (40) 19 25 26 27 28 32 42 43
')' (41) 19 25 26 27 28 32 42 43
'*' (42) 17
'+' (43) 15
'-' (45) 16
'/' (47) 18
'=' (61) 9 11 13 23 24
'{' (123) 2
'}' (125) 2
error (256)
SULSUL (258) 1
DAGDAG (259) 1
FIRBS (260) 11 12
PABA (261) 9 10
KOOJ (262) 13 14
WOOBLE (263) 42
LOOBLE (264) 42 43
JUUN (265) 25 26 27 28
ENDCOMMA (266) 9 10 11 12 13 14 23 24 25 26 27 28
EQ (267) 38
NEQ (268) 39
GT (269) 40
LT (270) 41
GTEQ (271)
LTEQ (272)
INTEIRO (273) 22 26 36
REAL (274) 21 27 37
CARACTERE (275) 13 24 28
VAR (276) 9 10 11 12 13 14 20 23 24 25 35
OR (277) 31
AND (278) 30
NOT (279) 29


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
program (35)
    on left: 1, on right: 0
BLOCO (36)
    on left: 2, on right: 1 42 43
COMANDOS (37)
    on left: 3 4, on right: 2 3
COMANDO (38)
    on left: 5 6 7 8, on right: 3 4
DECLARACAO (39)
    on left: 9 10 11 12 13 14, on right: 5
EXPR (40)
    on left: 15 16 17 18 19 20 21 22, on right: 9 11 15 16 17 18 19
    23
ATRIB (41)
    on left: 23 24, on right: 6
SAIDA (42)
    on left: 25 26 27 28, on right: 7
LOGICA (43)
    on left: 29 30 31 32 33 34, on right: 29 30 31 32 42 43
VALOR (44)
    on left: 35 36 37, on right: 34 38 39 40 41
EXPR_RELAC (45)
    on left: 38 39 40 41, on right: 33
IF_COMANDO (46)
    on left: 42 43, on right: 8


state 0

    0 $accept: . program $end

    SULSUL  shift, and go to state 1

    program  go to state 2


state 1

    1 program: SULSUL . BLOCO DAGDAG

    '{'  shift, and go to state 3

    BLOCO  go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    2 BLOCO: '{' . COMANDOS '}'

    FIRBS   shift, and go to state 6
    PABA    shift, and go to state 7
    KOOJ    shift, and go to state 8
    LOOBLE  shift, and go to state 9
    JUUN    shift, and go to state 10
    VAR     shift, and go to state 11

    COMANDOS    go to state 12
    COMANDO     go to state 13
    DECLARACAO  go to state 14
    ATRIB       go to state 15
    SAIDA       go to state 16
    IF_COMANDO  go to state 17


state 4

    1 program: SULSUL BLOCO . DAGDAG

    DAGDAG  shift, and go to state 18


state 5

    0 $accept: program $end .

    $default  accept


state 6

   11 DECLARACAO: FIRBS . VAR '=' EXPR ENDCOMMA
   12           | FIRBS . VAR ENDCOMMA

    VAR  shift, and go to state 19


state 7

    9 DECLARACAO: PABA . VAR '=' EXPR ENDCOMMA
   10           | PABA . VAR ENDCOMMA

    VAR  shift, and go to state 20


state 8

   13 DECLARACAO: KOOJ . VAR '=' CARACTERE ENDCOMMA
   14           | KOOJ . VAR ENDCOMMA

    VAR  shift, and go to state 21


state 9

   42 IF_COMANDO: LOOBLE . '(' LOGICA ')' BLOCO WOOBLE BLOCO
   43           | LOOBLE . '(' LOGICA ')' BLOCO

    '('  shift, and go to state 22


state 10

   25 SAIDA: JUUN . '(' VAR ')' ENDCOMMA
   26      | JUUN . '(' INTEIRO ')' ENDCOMMA
   27      | JUUN . '(' REAL ')' ENDCOMMA
   28      | JUUN . '(' CARACTERE ')' ENDCOMMA

    '('  shift, and go to state 23


state 11

   23 ATRIB: VAR . '=' EXPR ENDCOMMA
   24      | VAR . '=' CARACTERE ENDCOMMA

    '='  shift, and go to state 24


state 12

    2 BLOCO: '{' COMANDOS . '}'
    3 COMANDOS: COMANDOS . COMANDO

    FIRBS   shift, and go to state 6
    PABA    shift, and go to state 7
    KOOJ    shift, and go to state 8
    LOOBLE  shift, and go to state 9
    JUUN    shift, and go to state 10
    VAR     shift, and go to state 11
    '}'     shift, and go to state 25

    COMANDO     go to state 26
    DECLARACAO  go to state 14
    ATRIB       go to state 15
    SAIDA       go to state 16
    IF_COMANDO  go to state 17


state 13

    4 COMANDOS: COMANDO .

    $default  reduce using rule 4 (COMANDOS)


state 14

    5 COMANDO: DECLARACAO .

    $default  reduce using rule 5 (COMANDO)


state 15

    6 COMANDO: ATRIB .

    $default  reduce using rule 6 (COMANDO)


state 16

    7 COMANDO: SAIDA .

    $default  reduce using rule 7 (COMANDO)


state 17

    8 COMANDO: IF_COMANDO .

    $default  reduce using rule 8 (COMANDO)


state 18

    1 program: SULSUL BLOCO DAGDAG .

    $default  reduce using rule 1 (program)


state 19

   11 DECLARACAO: FIRBS VAR . '=' EXPR ENDCOMMA
   12           | FIRBS VAR . ENDCOMMA

    ENDCOMMA  shift, and go to state 27
    '='       shift, and go to state 28


state 20

    9 DECLARACAO: PABA VAR . '=' EXPR ENDCOMMA
   10           | PABA VAR . ENDCOMMA

    ENDCOMMA  shift, and go to state 29
    '='       shift, and go to state 30


state 21

   13 DECLARACAO: KOOJ VAR . '=' CARACTERE ENDCOMMA
   14           | KOOJ VAR . ENDCOMMA

    ENDCOMMA  shift, and go to state 31
    '='       shift, and go to state 32


state 22

   42 IF_COMANDO: LOOBLE '(' . LOGICA ')' BLOCO WOOBLE BLOCO
   43           | LOOBLE '(' . LOGICA ')' BLOCO

    INTEIRO  shift, and go to state 33
    REAL     shift, and go to state 34
    VAR      shift, and go to state 35
    NOT      shift, and go to state 36
    '('      shift, and go to state 37

    LOGICA      go to state 38
    VALOR       go to state 39
    EXPR_RELAC  go to state 40


state 23

   25 SAIDA: JUUN '(' . VAR ')' ENDCOMMA
   26      | JUUN '(' . INTEIRO ')' ENDCOMMA
   27      | JUUN '(' . REAL ')' ENDCOMMA
   28      | JUUN '(' . CARACTERE ')' ENDCOMMA

    INTEIRO    shift, and go to state 41
    REAL       shift, and go to state 42
    CARACTERE  shift, and go to state 43
    VAR        shift, and go to state 44


state 24

   23 ATRIB: VAR '=' . EXPR ENDCOMMA
   24      | VAR '=' . CARACTERE ENDCOMMA

    INTEIRO    shift, and go to state 45
    REAL       shift, and go to state 46
    CARACTERE  shift, and go to state 47
    VAR        shift, and go to state 48
    '('        shift, and go to state 49

    EXPR  go to state 50


state 25

    2 BLOCO: '{' COMANDOS '}' .

    $default  reduce using rule 2 (BLOCO)


state 26

    3 COMANDOS: COMANDOS COMANDO .

    $default  reduce using rule 3 (COMANDOS)


state 27

   12 DECLARACAO: FIRBS VAR ENDCOMMA .

    $default  reduce using rule 12 (DECLARACAO)


state 28

   11 DECLARACAO: FIRBS VAR '=' . EXPR ENDCOMMA

    INTEIRO  shift, and go to state 45
    REAL     shift, and go to state 46
    VAR      shift, and go to state 48
    '('      shift, and go to state 49

    EXPR  go to state 51


state 29

   10 DECLARACAO: PABA VAR ENDCOMMA .

    $default  reduce using rule 10 (DECLARACAO)


state 30

    9 DECLARACAO: PABA VAR '=' . EXPR ENDCOMMA

    INTEIRO  shift, and go to state 45
    REAL     shift, and go to state 46
    VAR      shift, and go to state 48
    '('      shift, and go to state 49

    EXPR  go to state 52


state 31

   14 DECLARACAO: KOOJ VAR ENDCOMMA .

    $default  reduce using rule 14 (DECLARACAO)


state 32

   13 DECLARACAO: KOOJ VAR '=' . CARACTERE ENDCOMMA

    CARACTERE  shift, and go to state 53


state 33

   36 VALOR: INTEIRO .

    $default  reduce using rule 36 (VALOR)


state 34

   37 VALOR: REAL .

    $default  reduce using rule 37 (VALOR)


state 35

   35 VALOR: VAR .

    $default  reduce using rule 35 (VALOR)


state 36

   29 LOGICA: NOT . LOGICA

    INTEIRO  shift, and go to state 33
    REAL     shift, and go to state 34
    VAR      shift, and go to state 35
    NOT      shift, and go to state 36
    '('      shift, and go to state 37

    LOGICA      go to state 54
    VALOR       go to state 39
    EXPR_RELAC  go to state 40


state 37

   32 LOGICA: '(' . LOGICA ')'

    INTEIRO  shift, and go to state 33
    REAL     shift, and go to state 34
    VAR      shift, and go to state 35
    NOT      shift, and go to state 36
    '('      shift, and go to state 37

    LOGICA      go to state 55
    VALOR       go to state 39
    EXPR_RELAC  go to state 40


state 38

   30 LOGICA: LOGICA . AND LOGICA
   31       | LOGICA . OR LOGICA
   42 IF_COMANDO: LOOBLE '(' LOGICA . ')' BLOCO WOOBLE BLOCO
   43           | LOOBLE '(' LOGICA . ')' BLOCO

    OR   shift, and go to state 56
    AND  shift, and go to state 57
    ')'  shift, and go to state 58


state 39

   34 LOGICA: VALOR .
   38 EXPR_RELAC: VALOR . EQ VALOR
   39           | VALOR . NEQ VALOR
   40           | VALOR . GT VALOR
   41           | VALOR . LT VALOR

    EQ   shift, and go to state 59
    NEQ  shift, and go to state 60
    GT   shift, and go to state 61
    LT   shift, and go to state 62

    $default  reduce using rule 34 (LOGICA)


state 40

   33 LOGICA: EXPR_RELAC .

    $default  reduce using rule 33 (LOGICA)


state 41

   26 SAIDA: JUUN '(' INTEIRO . ')' ENDCOMMA

    ')'  shift, and go to state 63


state 42

   27 SAIDA: JUUN '(' REAL . ')' ENDCOMMA

    ')'  shift, and go to state 64


state 43

   28 SAIDA: JUUN '(' CARACTERE . ')' ENDCOMMA

    ')'  shift, and go to state 65


state 44

   25 SAIDA: JUUN '(' VAR . ')' ENDCOMMA

    ')'  shift, and go to state 66


state 45

   22 EXPR: INTEIRO .

    $default  reduce using rule 22 (EXPR)


state 46

   21 EXPR: REAL .

    $default  reduce using rule 21 (EXPR)


state 47

   24 ATRIB: VAR '=' CARACTERE . ENDCOMMA

    ENDCOMMA  shift, and go to state 67


state 48

   20 EXPR: VAR .

    $default  reduce using rule 20 (EXPR)


state 49

   19 EXPR: '(' . EXPR ')'

    INTEIRO  shift, and go to state 45
    REAL     shift, and go to state 46
    VAR      shift, and go to state 48
    '('      shift, and go to state 49

    EXPR  go to state 68


state 50

   15 EXPR: EXPR . '+' EXPR
   16     | EXPR . '-' EXPR
   17     | EXPR . '*' EXPR
   18     | EXPR . '/' EXPR
   23 ATRIB: VAR '=' EXPR . ENDCOMMA

    ENDCOMMA  shift, and go to state 69
    '+'       shift, and go to state 70
    '-'       shift, and go to state 71
    '*'       shift, and go to state 72
    '/'       shift, and go to state 73


state 51

   11 DECLARACAO: FIRBS VAR '=' EXPR . ENDCOMMA
   15 EXPR: EXPR . '+' EXPR
   16     | EXPR . '-' EXPR
   17     | EXPR . '*' EXPR
   18     | EXPR . '/' EXPR

    ENDCOMMA  shift, and go to state 74
    '+'       shift, and go to state 70
    '-'       shift, and go to state 71
    '*'       shift, and go to state 72
    '/'       shift, and go to state 73


state 52

    9 DECLARACAO: PABA VAR '=' EXPR . ENDCOMMA
   15 EXPR: EXPR . '+' EXPR
   16     | EXPR . '-' EXPR
   17     | EXPR . '*' EXPR
   18     | EXPR . '/' EXPR

    ENDCOMMA  shift, and go to state 75
    '+'       shift, and go to state 70
    '-'       shift, and go to state 71
    '*'       shift, and go to state 72
    '/'       shift, and go to state 73


state 53

   13 DECLARACAO: KOOJ VAR '=' CARACTERE . ENDCOMMA

    ENDCOMMA  shift, and go to state 76


state 54

   29 LOGICA: NOT LOGICA .
   30       | LOGICA . AND LOGICA
   31       | LOGICA . OR LOGICA

    $default  reduce using rule 29 (LOGICA)


state 55

   30 LOGICA: LOGICA . AND LOGICA
   31       | LOGICA . OR LOGICA
   32       | '(' LOGICA . ')'

    OR   shift, and go to state 56
    AND  shift, and go to state 57
    ')'  shift, and go to state 77


state 56

   31 LOGICA: LOGICA OR . LOGICA

    INTEIRO  shift, and go to state 33
    REAL     shift, and go to state 34
    VAR      shift, and go to state 35
    NOT      shift, and go to state 36
    '('      shift, and go to state 37

    LOGICA      go to state 78
    VALOR       go to state 39
    EXPR_RELAC  go to state 40


state 57

   30 LOGICA: LOGICA AND . LOGICA

    INTEIRO  shift, and go to state 33
    REAL     shift, and go to state 34
    VAR      shift, and go to state 35
    NOT      shift, and go to state 36
    '('      shift, and go to state 37

    LOGICA      go to state 79
    VALOR       go to state 39
    EXPR_RELAC  go to state 40


state 58

   42 IF_COMANDO: LOOBLE '(' LOGICA ')' . BLOCO WOOBLE BLOCO
   43           | LOOBLE '(' LOGICA ')' . BLOCO

    '{'  shift, and go to state 3

    BLOCO  go to state 80


state 59

   38 EXPR_RELAC: VALOR EQ . VALOR

    INTEIRO  shift, and go to state 33
    REAL     shift, and go to state 34
    VAR      shift, and go to state 35

    VALOR  go to state 81


state 60

   39 EXPR_RELAC: VALOR NEQ . VALOR

    INTEIRO  shift, and go to state 33
    REAL     shift, and go to state 34
    VAR      shift, and go to state 35

    VALOR  go to state 82


state 61

   40 EXPR_RELAC: VALOR GT . VALOR

    INTEIRO  shift, and go to state 33
    REAL     shift, and go to state 34
    VAR      shift, and go to state 35

    VALOR  go to state 83


state 62

   41 EXPR_RELAC: VALOR LT . VALOR

    INTEIRO  shift, and go to state 33
    REAL     shift, and go to state 34
    VAR      shift, and go to state 35

    VALOR  go to state 84


state 63

   26 SAIDA: JUUN '(' INTEIRO ')' . ENDCOMMA

    ENDCOMMA  shift, and go to state 85


state 64

   27 SAIDA: JUUN '(' REAL ')' . ENDCOMMA

    ENDCOMMA  shift, and go to state 86


state 65

   28 SAIDA: JUUN '(' CARACTERE ')' . ENDCOMMA

    ENDCOMMA  shift, and go to state 87


state 66

   25 SAIDA: JUUN '(' VAR ')' . ENDCOMMA

    ENDCOMMA  shift, and go to state 88


state 67

   24 ATRIB: VAR '=' CARACTERE ENDCOMMA .

    $default  reduce using rule 24 (ATRIB)


state 68

   15 EXPR: EXPR . '+' EXPR
   16     | EXPR . '-' EXPR
   17     | EXPR . '*' EXPR
   18     | EXPR . '/' EXPR
   19     | '(' EXPR . ')'

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    ')'  shift, and go to state 89


state 69

   23 ATRIB: VAR '=' EXPR ENDCOMMA .

    $default  reduce using rule 23 (ATRIB)


state 70

   15 EXPR: EXPR '+' . EXPR

    INTEIRO  shift, and go to state 45
    REAL     shift, and go to state 46
    VAR      shift, and go to state 48
    '('      shift, and go to state 49

    EXPR  go to state 90


state 71

   16 EXPR: EXPR '-' . EXPR

    INTEIRO  shift, and go to state 45
    REAL     shift, and go to state 46
    VAR      shift, and go to state 48
    '('      shift, and go to state 49

    EXPR  go to state 91


state 72

   17 EXPR: EXPR '*' . EXPR

    INTEIRO  shift, and go to state 45
    REAL     shift, and go to state 46
    VAR      shift, and go to state 48
    '('      shift, and go to state 49

    EXPR  go to state 92


state 73

   18 EXPR: EXPR '/' . EXPR

    INTEIRO  shift, and go to state 45
    REAL     shift, and go to state 46
    VAR      shift, and go to state 48
    '('      shift, and go to state 49

    EXPR  go to state 93


state 74

   11 DECLARACAO: FIRBS VAR '=' EXPR ENDCOMMA .

    $default  reduce using rule 11 (DECLARACAO)


state 75

    9 DECLARACAO: PABA VAR '=' EXPR ENDCOMMA .

    $default  reduce using rule 9 (DECLARACAO)


state 76

   13 DECLARACAO: KOOJ VAR '=' CARACTERE ENDCOMMA .

    $default  reduce using rule 13 (DECLARACAO)


state 77

   32 LOGICA: '(' LOGICA ')' .

    $default  reduce using rule 32 (LOGICA)


state 78

   30 LOGICA: LOGICA . AND LOGICA
   31       | LOGICA . OR LOGICA
   31       | LOGICA OR LOGICA .

    AND  shift, and go to state 57

    $default  reduce using rule 31 (LOGICA)


state 79

   30 LOGICA: LOGICA . AND LOGICA
   30       | LOGICA AND LOGICA .
   31       | LOGICA . OR LOGICA

    $default  reduce using rule 30 (LOGICA)


state 80

   42 IF_COMANDO: LOOBLE '(' LOGICA ')' BLOCO . WOOBLE BLOCO
   43           | LOOBLE '(' LOGICA ')' BLOCO .

    WOOBLE  shift, and go to state 94

    $default  reduce using rule 43 (IF_COMANDO)


state 81

   38 EXPR_RELAC: VALOR EQ VALOR .

    $default  reduce using rule 38 (EXPR_RELAC)


state 82

   39 EXPR_RELAC: VALOR NEQ VALOR .

    $default  reduce using rule 39 (EXPR_RELAC)


state 83

   40 EXPR_RELAC: VALOR GT VALOR .

    $default  reduce using rule 40 (EXPR_RELAC)


state 84

   41 EXPR_RELAC: VALOR LT VALOR .

    $default  reduce using rule 41 (EXPR_RELAC)


state 85

   26 SAIDA: JUUN '(' INTEIRO ')' ENDCOMMA .

    $default  reduce using rule 26 (SAIDA)


state 86

   27 SAIDA: JUUN '(' REAL ')' ENDCOMMA .

    $default  reduce using rule 27 (SAIDA)


state 87

   28 SAIDA: JUUN '(' CARACTERE ')' ENDCOMMA .

    $default  reduce using rule 28 (SAIDA)


state 88

   25 SAIDA: JUUN '(' VAR ')' ENDCOMMA .

    $default  reduce using rule 25 (SAIDA)


state 89

   19 EXPR: '(' EXPR ')' .

    $default  reduce using rule 19 (EXPR)


state 90

   15 EXPR: EXPR . '+' EXPR
   15     | EXPR '+' EXPR .
   16     | EXPR . '-' EXPR
   17     | EXPR . '*' EXPR
   18     | EXPR . '/' EXPR

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 15 (EXPR)


state 91

   15 EXPR: EXPR . '+' EXPR
   16     | EXPR . '-' EXPR
   16     | EXPR '-' EXPR .
   17     | EXPR . '*' EXPR
   18     | EXPR . '/' EXPR

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 16 (EXPR)


state 92

   15 EXPR: EXPR . '+' EXPR
   16     | EXPR . '-' EXPR
   17     | EXPR . '*' EXPR
   17     | EXPR '*' EXPR .
   18     | EXPR . '/' EXPR

    $default  reduce using rule 17 (EXPR)


state 93

   15 EXPR: EXPR . '+' EXPR
   16     | EXPR . '-' EXPR
   17     | EXPR . '*' EXPR
   18     | EXPR . '/' EXPR
   18     | EXPR '/' EXPR .

    $default  reduce using rule 18 (EXPR)


state 94

   42 IF_COMANDO: LOOBLE '(' LOGICA ')' BLOCO WOOBLE . BLOCO

    '{'  shift, and go to state 3

    BLOCO  go to state 95


state 95

   42 IF_COMANDO: LOOBLE '(' LOGICA ')' BLOCO WOOBLE BLOCO .

    $default  reduce using rule 42 (IF_COMANDO)
