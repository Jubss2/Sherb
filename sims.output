Terminals unused in grammar

   MAIN
   ENDMAIN
   INT
   FLOAT
   CHAR
   READ
   IF
   ELSE
   WHILE
   MAKA


Grammar

    0 $accept: program $end

    1 program: SULSUL BLOCO DAGDAG

    2 BLOCO: '{' COMANDOS '}'

    3 COMANDOS: COMANDOS COMANDO
    4         | COMANDO

    5 COMANDO: DECLARACAO
    6        | ATRIB
    7        | SAIDA
    8        | IF_COMANDO

    9 DECLARACAO: PABA VAR '=' EXPR ENDCOMMA
   10           | PABA VAR ENDCOMMA
   11           | FIRBS VAR '=' EXPR ENDCOMMA
   12           | FIRBS VAR ENDCOMMA
   13           | KOOJ VAR '=' CARACTERE ENDCOMMA
   14           | KOOJ VAR ENDCOMMA

   15 EXPR: EXPR '+' EXPR
   16     | EXPR '-' EXPR
   17     | EXPR '*' EXPR
   18     | EXPR '/' EXPR
   19     | '(' EXPR ')'
   20     | VAR
   21     | REAL
   22     | INTEIRO

   23 ATRIB: VAR '=' EXPR ENDCOMMA
   24      | VAR '=' CARACTERE ENDCOMMA

   25 SAIDA: JUUN '(' VAR ')' ENDCOMMA
   26      | PRINT '(' INTEIRO ')' ENDCOMMA
   27      | PRINT '(' REAL ')' ENDCOMMA
   28      | PRINT '(' CARACTERE ')' ENDCOMMA

   29 LOGICA: NEESHGA LOGICA
   30       | LOGICA AND LOGICA
   31       | LOGICA OR LOGICA
   32       | '(' LOGICA ')'
   33       | EXPR_RELAC
   34       | VALOR

   35 VALOR: VAR
   36      | INTEIRO
   37      | REAL

   38 EXPR_RELAC: VALOR EQ VALOR
   39           | VALOR NEQ VALOR
   40           | VALOR GT VALOR
   41           | VALOR LT VALOR
   42           | VALOR GTEQ VALOR
   43           | VALOR LTEQ VALOR

   44 IF_COMANDO: LOOBLE '(' LOGICA ')' BLOCO WOOBLE BLOCO
   45           | LOOBLE '(' LOGICA ')' BLOCO


Terminals, with rules where they appear

$end (0) 0
'(' (40) 19 25 26 27 28 32 44 45
')' (41) 19 25 26 27 28 32 44 45
'*' (42) 17
'+' (43) 15
'-' (45) 16
'/' (47) 18
'=' (61) 9 11 13 23 24
'{' (123) 2
'}' (125) 2
error (256)
MAIN (258)
ENDMAIN (259)
INT (260)
FLOAT (261)
CHAR (262)
PRINT (263) 26 27 28
READ (264)
NEESHGA (265) 29
AND (266) 30
OR (267) 31
IF (268)
ELSE (269)
WHILE (270)
SULSUL (271) 1
DAGDAG (272) 1
FIRBS (273) 11 12
PABA (274) 9 10
KOOJ (275) 13 14
WOOBLE (276) 44
LOOBLE (277) 44 45
JUUN (278) 25
ENDCOMMA (279) 9 10 11 12 13 14 23 24 25 26 27 28
MAKA (280)
EQ (281) 38
NEQ (282) 39
GT (283) 40
LT (284) 41
GTEQ (285) 42
LTEQ (286) 43
INTEIRO (287) 22 26 36
REAL (288) 21 27 37
CARACTERE (289) 13 24 28
VAR (290) 9 10 11 12 13 14 20 23 24 25 35


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
BLOCO (47)
    on left: 2, on right: 1 44 45
COMANDOS (48)
    on left: 3 4, on right: 2 3
COMANDO (49)
    on left: 5 6 7 8, on right: 3 4
DECLARACAO (50)
    on left: 9 10 11 12 13 14, on right: 5
EXPR (51)
    on left: 15 16 17 18 19 20 21 22, on right: 9 11 15 16 17 18 19
    23
ATRIB (52)
    on left: 23 24, on right: 6
SAIDA (53)
    on left: 25 26 27 28, on right: 7
LOGICA (54)
    on left: 29 30 31 32 33 34, on right: 29 30 31 32 44 45
VALOR (55)
    on left: 35 36 37, on right: 34 38 39 40 41 42 43
EXPR_RELAC (56)
    on left: 38 39 40 41 42 43, on right: 33
IF_COMANDO (57)
    on left: 44 45, on right: 8


state 0

    0 $accept: . program $end

    SULSUL  shift, and go to state 1

    program  go to state 2


state 1

    1 program: SULSUL . BLOCO DAGDAG

    '{'  shift, and go to state 3

    BLOCO  go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    2 BLOCO: '{' . COMANDOS '}'

    PRINT   shift, and go to state 6
    FIRBS   shift, and go to state 7
    PABA    shift, and go to state 8
    KOOJ    shift, and go to state 9
    LOOBLE  shift, and go to state 10
    JUUN    shift, and go to state 11
    VAR     shift, and go to state 12

    COMANDOS    go to state 13
    COMANDO     go to state 14
    DECLARACAO  go to state 15
    ATRIB       go to state 16
    SAIDA       go to state 17
    IF_COMANDO  go to state 18


state 4

    1 program: SULSUL BLOCO . DAGDAG

    DAGDAG  shift, and go to state 19


state 5

    0 $accept: program $end .

    $default  accept


state 6

   26 SAIDA: PRINT . '(' INTEIRO ')' ENDCOMMA
   27      | PRINT . '(' REAL ')' ENDCOMMA
   28      | PRINT . '(' CARACTERE ')' ENDCOMMA

    '('  shift, and go to state 20


state 7

   11 DECLARACAO: FIRBS . VAR '=' EXPR ENDCOMMA
   12           | FIRBS . VAR ENDCOMMA

    VAR  shift, and go to state 21


state 8

    9 DECLARACAO: PABA . VAR '=' EXPR ENDCOMMA
   10           | PABA . VAR ENDCOMMA

    VAR  shift, and go to state 22


state 9

   13 DECLARACAO: KOOJ . VAR '=' CARACTERE ENDCOMMA
   14           | KOOJ . VAR ENDCOMMA

    VAR  shift, and go to state 23


state 10

   44 IF_COMANDO: LOOBLE . '(' LOGICA ')' BLOCO WOOBLE BLOCO
   45           | LOOBLE . '(' LOGICA ')' BLOCO

    '('  shift, and go to state 24


state 11

   25 SAIDA: JUUN . '(' VAR ')' ENDCOMMA

    '('  shift, and go to state 25


state 12

   23 ATRIB: VAR . '=' EXPR ENDCOMMA
   24      | VAR . '=' CARACTERE ENDCOMMA

    '='  shift, and go to state 26


state 13

    2 BLOCO: '{' COMANDOS . '}'
    3 COMANDOS: COMANDOS . COMANDO

    PRINT   shift, and go to state 6
    FIRBS   shift, and go to state 7
    PABA    shift, and go to state 8
    KOOJ    shift, and go to state 9
    LOOBLE  shift, and go to state 10
    JUUN    shift, and go to state 11
    VAR     shift, and go to state 12
    '}'     shift, and go to state 27

    COMANDO     go to state 28
    DECLARACAO  go to state 15
    ATRIB       go to state 16
    SAIDA       go to state 17
    IF_COMANDO  go to state 18


state 14

    4 COMANDOS: COMANDO .

    $default  reduce using rule 4 (COMANDOS)


state 15

    5 COMANDO: DECLARACAO .

    $default  reduce using rule 5 (COMANDO)


state 16

    6 COMANDO: ATRIB .

    $default  reduce using rule 6 (COMANDO)


state 17

    7 COMANDO: SAIDA .

    $default  reduce using rule 7 (COMANDO)


state 18

    8 COMANDO: IF_COMANDO .

    $default  reduce using rule 8 (COMANDO)


state 19

    1 program: SULSUL BLOCO DAGDAG .

    $default  reduce using rule 1 (program)


state 20

   26 SAIDA: PRINT '(' . INTEIRO ')' ENDCOMMA
   27      | PRINT '(' . REAL ')' ENDCOMMA
   28      | PRINT '(' . CARACTERE ')' ENDCOMMA

    INTEIRO    shift, and go to state 29
    REAL       shift, and go to state 30
    CARACTERE  shift, and go to state 31


state 21

   11 DECLARACAO: FIRBS VAR . '=' EXPR ENDCOMMA
   12           | FIRBS VAR . ENDCOMMA

    ENDCOMMA  shift, and go to state 32
    '='       shift, and go to state 33


state 22

    9 DECLARACAO: PABA VAR . '=' EXPR ENDCOMMA
   10           | PABA VAR . ENDCOMMA

    ENDCOMMA  shift, and go to state 34
    '='       shift, and go to state 35


state 23

   13 DECLARACAO: KOOJ VAR . '=' CARACTERE ENDCOMMA
   14           | KOOJ VAR . ENDCOMMA

    ENDCOMMA  shift, and go to state 36
    '='       shift, and go to state 37


state 24

   44 IF_COMANDO: LOOBLE '(' . LOGICA ')' BLOCO WOOBLE BLOCO
   45           | LOOBLE '(' . LOGICA ')' BLOCO

    NEESHGA  shift, and go to state 38
    INTEIRO  shift, and go to state 39
    REAL     shift, and go to state 40
    VAR      shift, and go to state 41
    '('      shift, and go to state 42

    LOGICA      go to state 43
    VALOR       go to state 44
    EXPR_RELAC  go to state 45


state 25

   25 SAIDA: JUUN '(' . VAR ')' ENDCOMMA

    VAR  shift, and go to state 46


state 26

   23 ATRIB: VAR '=' . EXPR ENDCOMMA
   24      | VAR '=' . CARACTERE ENDCOMMA

    INTEIRO    shift, and go to state 47
    REAL       shift, and go to state 48
    CARACTERE  shift, and go to state 49
    VAR        shift, and go to state 50
    '('        shift, and go to state 51

    EXPR  go to state 52


state 27

    2 BLOCO: '{' COMANDOS '}' .

    $default  reduce using rule 2 (BLOCO)


state 28

    3 COMANDOS: COMANDOS COMANDO .

    $default  reduce using rule 3 (COMANDOS)


state 29

   26 SAIDA: PRINT '(' INTEIRO . ')' ENDCOMMA

    ')'  shift, and go to state 53


state 30

   27 SAIDA: PRINT '(' REAL . ')' ENDCOMMA

    ')'  shift, and go to state 54


state 31

   28 SAIDA: PRINT '(' CARACTERE . ')' ENDCOMMA

    ')'  shift, and go to state 55


state 32

   12 DECLARACAO: FIRBS VAR ENDCOMMA .

    $default  reduce using rule 12 (DECLARACAO)


state 33

   11 DECLARACAO: FIRBS VAR '=' . EXPR ENDCOMMA

    INTEIRO  shift, and go to state 47
    REAL     shift, and go to state 48
    VAR      shift, and go to state 50
    '('      shift, and go to state 51

    EXPR  go to state 56


state 34

   10 DECLARACAO: PABA VAR ENDCOMMA .

    $default  reduce using rule 10 (DECLARACAO)


state 35

    9 DECLARACAO: PABA VAR '=' . EXPR ENDCOMMA

    INTEIRO  shift, and go to state 47
    REAL     shift, and go to state 48
    VAR      shift, and go to state 50
    '('      shift, and go to state 51

    EXPR  go to state 57


state 36

   14 DECLARACAO: KOOJ VAR ENDCOMMA .

    $default  reduce using rule 14 (DECLARACAO)


state 37

   13 DECLARACAO: KOOJ VAR '=' . CARACTERE ENDCOMMA

    CARACTERE  shift, and go to state 58


state 38

   29 LOGICA: NEESHGA . LOGICA

    NEESHGA  shift, and go to state 38
    INTEIRO  shift, and go to state 39
    REAL     shift, and go to state 40
    VAR      shift, and go to state 41
    '('      shift, and go to state 42

    LOGICA      go to state 59
    VALOR       go to state 44
    EXPR_RELAC  go to state 45


state 39

   36 VALOR: INTEIRO .

    $default  reduce using rule 36 (VALOR)


state 40

   37 VALOR: REAL .

    $default  reduce using rule 37 (VALOR)


state 41

   35 VALOR: VAR .

    $default  reduce using rule 35 (VALOR)


state 42

   32 LOGICA: '(' . LOGICA ')'

    NEESHGA  shift, and go to state 38
    INTEIRO  shift, and go to state 39
    REAL     shift, and go to state 40
    VAR      shift, and go to state 41
    '('      shift, and go to state 42

    LOGICA      go to state 60
    VALOR       go to state 44
    EXPR_RELAC  go to state 45


state 43

   30 LOGICA: LOGICA . AND LOGICA
   31       | LOGICA . OR LOGICA
   44 IF_COMANDO: LOOBLE '(' LOGICA . ')' BLOCO WOOBLE BLOCO
   45           | LOOBLE '(' LOGICA . ')' BLOCO

    AND  shift, and go to state 61
    OR   shift, and go to state 62
    ')'  shift, and go to state 63


state 44

   34 LOGICA: VALOR .
   38 EXPR_RELAC: VALOR . EQ VALOR
   39           | VALOR . NEQ VALOR
   40           | VALOR . GT VALOR
   41           | VALOR . LT VALOR
   42           | VALOR . GTEQ VALOR
   43           | VALOR . LTEQ VALOR

    EQ    shift, and go to state 64
    NEQ   shift, and go to state 65
    GT    shift, and go to state 66
    LT    shift, and go to state 67
    GTEQ  shift, and go to state 68
    LTEQ  shift, and go to state 69

    $default  reduce using rule 34 (LOGICA)


state 45

   33 LOGICA: EXPR_RELAC .

    $default  reduce using rule 33 (LOGICA)


state 46

   25 SAIDA: JUUN '(' VAR . ')' ENDCOMMA

    ')'  shift, and go to state 70


state 47

   22 EXPR: INTEIRO .

    $default  reduce using rule 22 (EXPR)


state 48

   21 EXPR: REAL .

    $default  reduce using rule 21 (EXPR)


state 49

   24 ATRIB: VAR '=' CARACTERE . ENDCOMMA

    ENDCOMMA  shift, and go to state 71


state 50

   20 EXPR: VAR .

    $default  reduce using rule 20 (EXPR)


state 51

   19 EXPR: '(' . EXPR ')'

    INTEIRO  shift, and go to state 47
    REAL     shift, and go to state 48
    VAR      shift, and go to state 50
    '('      shift, and go to state 51

    EXPR  go to state 72


state 52

   15 EXPR: EXPR . '+' EXPR
   16     | EXPR . '-' EXPR
   17     | EXPR . '*' EXPR
   18     | EXPR . '/' EXPR
   23 ATRIB: VAR '=' EXPR . ENDCOMMA

    ENDCOMMA  shift, and go to state 73
    '+'       shift, and go to state 74
    '-'       shift, and go to state 75
    '*'       shift, and go to state 76
    '/'       shift, and go to state 77


state 53

   26 SAIDA: PRINT '(' INTEIRO ')' . ENDCOMMA

    ENDCOMMA  shift, and go to state 78


state 54

   27 SAIDA: PRINT '(' REAL ')' . ENDCOMMA

    ENDCOMMA  shift, and go to state 79


state 55

   28 SAIDA: PRINT '(' CARACTERE ')' . ENDCOMMA

    ENDCOMMA  shift, and go to state 80


state 56

   11 DECLARACAO: FIRBS VAR '=' EXPR . ENDCOMMA
   15 EXPR: EXPR . '+' EXPR
   16     | EXPR . '-' EXPR
   17     | EXPR . '*' EXPR
   18     | EXPR . '/' EXPR

    ENDCOMMA  shift, and go to state 81
    '+'       shift, and go to state 74
    '-'       shift, and go to state 75
    '*'       shift, and go to state 76
    '/'       shift, and go to state 77


state 57

    9 DECLARACAO: PABA VAR '=' EXPR . ENDCOMMA
   15 EXPR: EXPR . '+' EXPR
   16     | EXPR . '-' EXPR
   17     | EXPR . '*' EXPR
   18     | EXPR . '/' EXPR

    ENDCOMMA  shift, and go to state 82
    '+'       shift, and go to state 74
    '-'       shift, and go to state 75
    '*'       shift, and go to state 76
    '/'       shift, and go to state 77


state 58

   13 DECLARACAO: KOOJ VAR '=' CARACTERE . ENDCOMMA

    ENDCOMMA  shift, and go to state 83


state 59

   29 LOGICA: NEESHGA LOGICA .
   30       | LOGICA . AND LOGICA
   31       | LOGICA . OR LOGICA

    $default  reduce using rule 29 (LOGICA)


state 60

   30 LOGICA: LOGICA . AND LOGICA
   31       | LOGICA . OR LOGICA
   32       | '(' LOGICA . ')'

    AND  shift, and go to state 61
    OR   shift, and go to state 62
    ')'  shift, and go to state 84


state 61

   30 LOGICA: LOGICA AND . LOGICA

    NEESHGA  shift, and go to state 38
    INTEIRO  shift, and go to state 39
    REAL     shift, and go to state 40
    VAR      shift, and go to state 41
    '('      shift, and go to state 42

    LOGICA      go to state 85
    VALOR       go to state 44
    EXPR_RELAC  go to state 45


state 62

   31 LOGICA: LOGICA OR . LOGICA

    NEESHGA  shift, and go to state 38
    INTEIRO  shift, and go to state 39
    REAL     shift, and go to state 40
    VAR      shift, and go to state 41
    '('      shift, and go to state 42

    LOGICA      go to state 86
    VALOR       go to state 44
    EXPR_RELAC  go to state 45


state 63

   44 IF_COMANDO: LOOBLE '(' LOGICA ')' . BLOCO WOOBLE BLOCO
   45           | LOOBLE '(' LOGICA ')' . BLOCO

    '{'  shift, and go to state 3

    BLOCO  go to state 87


state 64

   38 EXPR_RELAC: VALOR EQ . VALOR

    INTEIRO  shift, and go to state 39
    REAL     shift, and go to state 40
    VAR      shift, and go to state 41

    VALOR  go to state 88


state 65

   39 EXPR_RELAC: VALOR NEQ . VALOR

    INTEIRO  shift, and go to state 39
    REAL     shift, and go to state 40
    VAR      shift, and go to state 41

    VALOR  go to state 89


state 66

   40 EXPR_RELAC: VALOR GT . VALOR

    INTEIRO  shift, and go to state 39
    REAL     shift, and go to state 40
    VAR      shift, and go to state 41

    VALOR  go to state 90


state 67

   41 EXPR_RELAC: VALOR LT . VALOR

    INTEIRO  shift, and go to state 39
    REAL     shift, and go to state 40
    VAR      shift, and go to state 41

    VALOR  go to state 91


state 68

   42 EXPR_RELAC: VALOR GTEQ . VALOR

    INTEIRO  shift, and go to state 39
    REAL     shift, and go to state 40
    VAR      shift, and go to state 41

    VALOR  go to state 92


state 69

   43 EXPR_RELAC: VALOR LTEQ . VALOR

    INTEIRO  shift, and go to state 39
    REAL     shift, and go to state 40
    VAR      shift, and go to state 41

    VALOR  go to state 93


state 70

   25 SAIDA: JUUN '(' VAR ')' . ENDCOMMA

    ENDCOMMA  shift, and go to state 94


state 71

   24 ATRIB: VAR '=' CARACTERE ENDCOMMA .

    $default  reduce using rule 24 (ATRIB)


state 72

   15 EXPR: EXPR . '+' EXPR
   16     | EXPR . '-' EXPR
   17     | EXPR . '*' EXPR
   18     | EXPR . '/' EXPR
   19     | '(' EXPR . ')'

    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    ')'  shift, and go to state 95


state 73

   23 ATRIB: VAR '=' EXPR ENDCOMMA .

    $default  reduce using rule 23 (ATRIB)


state 74

   15 EXPR: EXPR '+' . EXPR

    INTEIRO  shift, and go to state 47
    REAL     shift, and go to state 48
    VAR      shift, and go to state 50
    '('      shift, and go to state 51

    EXPR  go to state 96


state 75

   16 EXPR: EXPR '-' . EXPR

    INTEIRO  shift, and go to state 47
    REAL     shift, and go to state 48
    VAR      shift, and go to state 50
    '('      shift, and go to state 51

    EXPR  go to state 97


state 76

   17 EXPR: EXPR '*' . EXPR

    INTEIRO  shift, and go to state 47
    REAL     shift, and go to state 48
    VAR      shift, and go to state 50
    '('      shift, and go to state 51

    EXPR  go to state 98


state 77

   18 EXPR: EXPR '/' . EXPR

    INTEIRO  shift, and go to state 47
    REAL     shift, and go to state 48
    VAR      shift, and go to state 50
    '('      shift, and go to state 51

    EXPR  go to state 99


state 78

   26 SAIDA: PRINT '(' INTEIRO ')' ENDCOMMA .

    $default  reduce using rule 26 (SAIDA)


state 79

   27 SAIDA: PRINT '(' REAL ')' ENDCOMMA .

    $default  reduce using rule 27 (SAIDA)


state 80

   28 SAIDA: PRINT '(' CARACTERE ')' ENDCOMMA .

    $default  reduce using rule 28 (SAIDA)


state 81

   11 DECLARACAO: FIRBS VAR '=' EXPR ENDCOMMA .

    $default  reduce using rule 11 (DECLARACAO)


state 82

    9 DECLARACAO: PABA VAR '=' EXPR ENDCOMMA .

    $default  reduce using rule 9 (DECLARACAO)


state 83

   13 DECLARACAO: KOOJ VAR '=' CARACTERE ENDCOMMA .

    $default  reduce using rule 13 (DECLARACAO)


state 84

   32 LOGICA: '(' LOGICA ')' .

    $default  reduce using rule 32 (LOGICA)


state 85

   30 LOGICA: LOGICA . AND LOGICA
   30       | LOGICA AND LOGICA .
   31       | LOGICA . OR LOGICA

    $default  reduce using rule 30 (LOGICA)


state 86

   30 LOGICA: LOGICA . AND LOGICA
   31       | LOGICA . OR LOGICA
   31       | LOGICA OR LOGICA .

    AND  shift, and go to state 61

    $default  reduce using rule 31 (LOGICA)


state 87

   44 IF_COMANDO: LOOBLE '(' LOGICA ')' BLOCO . WOOBLE BLOCO
   45           | LOOBLE '(' LOGICA ')' BLOCO .

    WOOBLE  shift, and go to state 100

    $default  reduce using rule 45 (IF_COMANDO)


state 88

   38 EXPR_RELAC: VALOR EQ VALOR .

    $default  reduce using rule 38 (EXPR_RELAC)


state 89

   39 EXPR_RELAC: VALOR NEQ VALOR .

    $default  reduce using rule 39 (EXPR_RELAC)


state 90

   40 EXPR_RELAC: VALOR GT VALOR .

    $default  reduce using rule 40 (EXPR_RELAC)


state 91

   41 EXPR_RELAC: VALOR LT VALOR .

    $default  reduce using rule 41 (EXPR_RELAC)


state 92

   42 EXPR_RELAC: VALOR GTEQ VALOR .

    $default  reduce using rule 42 (EXPR_RELAC)


state 93

   43 EXPR_RELAC: VALOR LTEQ VALOR .

    $default  reduce using rule 43 (EXPR_RELAC)


state 94

   25 SAIDA: JUUN '(' VAR ')' ENDCOMMA .

    $default  reduce using rule 25 (SAIDA)


state 95

   19 EXPR: '(' EXPR ')' .

    $default  reduce using rule 19 (EXPR)


state 96

   15 EXPR: EXPR . '+' EXPR
   15     | EXPR '+' EXPR .
   16     | EXPR . '-' EXPR
   17     | EXPR . '*' EXPR
   18     | EXPR . '/' EXPR

    '*'  shift, and go to state 76
    '/'  shift, and go to state 77

    $default  reduce using rule 15 (EXPR)


state 97

   15 EXPR: EXPR . '+' EXPR
   16     | EXPR . '-' EXPR
   16     | EXPR '-' EXPR .
   17     | EXPR . '*' EXPR
   18     | EXPR . '/' EXPR

    '*'  shift, and go to state 76
    '/'  shift, and go to state 77

    $default  reduce using rule 16 (EXPR)


state 98

   15 EXPR: EXPR . '+' EXPR
   16     | EXPR . '-' EXPR
   17     | EXPR . '*' EXPR
   17     | EXPR '*' EXPR .
   18     | EXPR . '/' EXPR

    $default  reduce using rule 17 (EXPR)


state 99

   15 EXPR: EXPR . '+' EXPR
   16     | EXPR . '-' EXPR
   17     | EXPR . '*' EXPR
   18     | EXPR . '/' EXPR
   18     | EXPR '/' EXPR .

    $default  reduce using rule 18 (EXPR)


state 100

   44 IF_COMANDO: LOOBLE '(' LOGICA ')' BLOCO WOOBLE . BLOCO

    '{'  shift, and go to state 3

    BLOCO  go to state 101


state 101

   44 IF_COMANDO: LOOBLE '(' LOGICA ')' BLOCO WOOBLE BLOCO .

    $default  reduce using rule 44 (IF_COMANDO)
